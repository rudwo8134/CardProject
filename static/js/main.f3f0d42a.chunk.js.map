{"version":3,"sources":["Card.jsx","Deck.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","angle","Math","random","x","y","_tansfrom","style","transform","this","className","src","image","alt","name","Component","API_BASE_URL","Deck","getCard","a","id","state","deck","deck_id","cardUrl","axios","get","cardres","data","success","alert","Error","card","cards","setState","st","drawn","code","suit","value","console","log","map","c","onClick","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAoBeA,EAjBf,kDACE,WAAYC,GAAO,IAAD,sBAChB,cAAMA,GACN,IAAIC,EAAuB,GAAfC,KAAKC,SAAc,GAC3BC,EAAkB,GAAfF,KAAKC,SAAc,GACtBE,EAAkB,GAAfH,KAAKC,SAAc,GAJV,OAKhB,EAAKG,UAAL,oBAA8BF,EAA9B,eAAsCC,EAAtC,sBAAqDJ,EAArD,QALgB,EADpB,0CAQE,WAGE,OACE,qBAAKM,MAAO,CAACC,UAAUC,KAAKH,WAAYI,UAAU,OAAOC,IAAKF,KAAKT,MAAMY,MAAOC,IAAKJ,KAAKT,MAAMc,WAZtG,GAA0BC,a,iBCEpBC,G,MAAa,wCA6DJC,EA3Df,kDACE,WAAYjB,GAAO,IAAD,8BAChB,cAAMA,IAWRkB,QAZkB,sBAYR,kCAAAC,EAAA,6DACFC,EAAK,EAAKC,MAAMC,KAAKC,QADnB,SAGFC,EAHE,UAGWR,EAHX,YAG2BI,EAH3B,mBAIcK,IAAMC,IAAIF,GAJxB,WAIFG,EAJE,QAKMC,KAAKC,QALX,sBAMJC,MAAM,sBACA,IAAIC,MAPN,OASFC,EAAOL,EAAQC,KAAKK,MAAM,GAC9B,EAAKC,UAAS,SAAAC,GAAE,MAAI,CAClBC,MAAM,GAAD,mBACAD,EAAGC,OADH,CAEH,CAAChB,GAAGY,EAAKK,KACPzB,MAAMoB,EAAKpB,MACXE,KAAK,GAAD,OAAKkB,EAAKM,KAAV,eAAqBN,EAAKO,cAf9B,kDAoBNC,QAAQC,IAAR,MApBM,0DAVR,EAAKpB,MAAQ,CACXC,KAAK,KACLc,MAAM,IAJQ,EADpB,4FAQE,4BAAAjB,EAAA,sEACmBM,IAAMC,IAAN,UAAaV,EAAb,iBADnB,OACMM,EADN,OAEEb,KAAKyB,SAAS,CAACZ,KAAMA,EAAKM,OAF5B,gDARF,0EAuCE,WACE,IAAMK,EAAQxB,KAAKY,MAAMe,MAAMM,KAAI,SAAAC,GAAC,OAClC,cAAC,EAAD,CAAiB7B,KAAM6B,EAAE7B,KAAMF,MAAO+B,EAAE/B,OAA7B+B,EAAEvB,OAGf,OACE,gCACE,oBAAIV,UAAU,aAAd,yBACA,4DACA,wBAAQkC,QAAUnC,KAAKS,QAAvB,uBACA,+BAAKT,KAAKY,MAAMe,MAAM3B,KAAKY,MAAMe,MAAMS,OAAO,IAAzC,kBAA0DpC,KAAKY,MAAMe,MAAM3B,KAAKY,MAAMe,MAAMS,OAAO,GAAG/B,MAA3G,OACA,qBAAKJ,UAAU,WAAf,SACCuB,WAnDT,GAA0BlB,aCMX+B,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,OCISqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f3f0d42a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Card.css'\n\nexport class Card extends Component {\n  constructor(props){\n    super(props)\n    let angle = Math.random() *90 -45;\n    let x =Math.random() *40 -20;\n    let y =Math.random() *40 -20\n    this._tansfrom = `translate(${x}px, ${y}px) rotate(${angle}deg)` \n  }\n  render() {\n    // transform\n   \n    return (\n      <img style={{transform:this._tansfrom}} className='Card' src={this.props.image} alt={this.props.name}/>\n    )\n  }\n}\n\nexport default Card\n","import React, { Component } from 'react'\nimport Card from './Card'\nimport axios from 'axios'\nimport './deck.css'\n\nconst API_BASE_URL='https://deckofcardsapi.com/api/deck/'\n\nexport class Deck extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      deck:null,\n      drawn:[]\n    }\n  }\n  async componentDidMount(){\n    let deck = await axios.get(`${API_BASE_URL}/new/shuffle`)\n    this.setState({deck: deck.data})\n  }\n\n  getCard = async() => {\n    const id = this.state.deck.deck_id\n    try{\n      let cardUrl = `${API_BASE_URL}/${id}/draw/`\n      let cardres = await axios.get(cardUrl)\n      if(!cardres.data.success){\n        alert('no card remainning')\n        throw new Error()\n      }\n      let card = cardres.data.cards[0]\n      this.setState(st =>({\n        drawn:[\n          ...st.drawn,\n          {id:card.code, \n            image:card.image,\n            name: `${card.suit} of ${card.value}`}\n        ]\n      })\n       )\n    }catch(err){\n      console.log (err)\n    }\n  \n  \n  }\n\n  render() {\n    const cards = this.state.drawn.map(c =>(\n      <Card key={c.id} name={c.name} image={c.image}></Card>\n    ))\n\n    return (\n      <div>\n        <h1 className='Deck-title'>Card Dealer</h1>\n        <h2>*a little demo with React*</h2>\n        <button onClick ={this.getCard}> Get Card</button>\n        <h3>{this.state.drawn[this.state.drawn.length-1] && `You Got ${this.state.drawn[this.state.drawn.length-1].name}`} </h3>\n        <div className=\"cardarea\">\n        {cards}\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Deck\n","\nimport './App.css';\nimport Deck from './Deck'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Deck/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}